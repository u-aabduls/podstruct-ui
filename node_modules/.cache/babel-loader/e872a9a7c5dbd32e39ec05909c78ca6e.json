{"ast":null,"code":"import _objectSpread from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/a18322/Desktop/podstruct-fe/src/Routes.js\",\n    _this = this;\n\nimport React, { Suspense, lazy } from 'react';\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n/* loader component for Suspense*/\n\nimport PageLoader from './components/Common/PageLoader';\nimport Base from './components/Layout/Base';\nimport BasePage from './components/Layout/BasePage'; // import BaseHorizontal from './components/Layout/BaseHorizontal';\n\n/* Used to render a lazy component with react-router */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar waitFor = function waitFor(Tag) {\n  return function (props) {\n    return /*#__PURE__*/_jsxDEV(Tag, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 33\n    }, _this);\n  };\n}; // const SingleView = lazy(() => import('./components/SingleView/SingleView'));\n// const SubMenu = lazy(() => import('./components/SubMenu/SubMenu'));\n\n\nvar Login = /*#__PURE__*/lazy(_c = function _c() {\n  return import('./components/Pages/Login');\n}); // List of routes that uses the page layout\n// listed here to Switch between layouts\n// depending on the current pathname\n\n_c2 = Login;\nvar listofPages = ['/register', '/login'];\n\nvar Routes = function Routes(_ref) {\n  var location = _ref.location;\n  var currentKey = location.pathname.split('/')[1] || '/';\n  var timeout = {\n    enter: 500,\n    exit: 500\n  }; // Animations supported\n  //      'rag-fadeIn'\n  //      'rag-fadeInRight'\n  //      'rag-fadeInLeft'\n\n  var animationName = 'rag-fadeIn';\n\n  if (listofPages.indexOf(location.pathname) > -1) {\n    return (\n      /*#__PURE__*/\n      // Page Layout component wrapper\n      _jsxDEV(BasePage, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, _this),\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            location: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, _this)\n    );\n  } else {\n    return (\n      /*#__PURE__*/\n      // Layout component wrapper\n      // Use <BaseHorizontal> to change layout\n      _jsxDEV(Base, {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: timeout,\n            classNames: animationName,\n            exit: false,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Suspense, {\n                fallback: /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 45\n                }, _this),\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  location: location,\n                  children: [/*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/singleview\",\n                    component: waitFor(SingleView)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 33\n                  }, _this), /*#__PURE__*/_jsxDEV(Route, {\n                    path: \"/submenu\",\n                    component: waitFor(SubMenu)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 33\n                  }, _this), /*#__PURE__*/_jsxDEV(Redirect, {\n                    to: \"/singleview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 33\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 29\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, _this)\n          }, currentKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, _this)\n    );\n  }\n};\n\n_c3 = Routes;\nexport default _c4 = withRouter(Routes);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Login$lazy\");\n$RefreshReg$(_c2, \"Login\");\n$RefreshReg$(_c3, \"Routes\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/a18322/Desktop/podstruct-fe/src/Routes.js"],"names":["React","Suspense","lazy","withRouter","Switch","Route","Redirect","TransitionGroup","CSSTransition","PageLoader","Base","BasePage","waitFor","Tag","props","Login","listofPages","Routes","location","currentKey","pathname","split","timeout","enter","exit","animationName","indexOf","SingleView","SubMenu"],"mappings":"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","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n/* loader component for Suspense*/\r\nimport PageLoader from './components/Common/PageLoader';\r\n\r\nimport Base from './components/Layout/Base';\r\nimport BasePage from './components/Layout/BasePage';\r\n// import BaseHorizontal from './components/Layout/BaseHorizontal';\r\n\r\n/* Used to render a lazy component with react-router */\r\nconst waitFor = Tag => props => <Tag {...props}/>;\r\n\r\n// const SingleView = lazy(() => import('./components/SingleView/SingleView'));\r\n// const SubMenu = lazy(() => import('./components/SubMenu/SubMenu'));\r\nconst Login = lazy(() => import('./components/Pages/Login'));\r\n\r\n// List of routes that uses the page layout\r\n// listed here to Switch between layouts\r\n// depending on the current pathname\r\nconst listofPages = [\r\n    '/register',\r\n    '/login'\r\n];\r\n\r\nconst Routes = ({ location }) => {\r\n    const currentKey = location.pathname.split('/')[1] || '/';\r\n    const timeout = { enter: 500, exit: 500 };\r\n\r\n    // Animations supported\r\n    //      'rag-fadeIn'\r\n    //      'rag-fadeInRight'\r\n    //      'rag-fadeInLeft'\r\n\r\n    const animationName = 'rag-fadeIn'\r\n\r\n    if(listofPages.indexOf(location.pathname) > -1) {\r\n        return (\r\n            // Page Layout component wrapper\r\n            <BasePage>\r\n                <Suspense fallback={<PageLoader/>}>\r\n                    <Switch location={location}>\r\n                        {/* See full project for reference */}\r\n                    </Switch>\r\n                </Suspense>\r\n            </BasePage>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            // Layout component wrapper\r\n            // Use <BaseHorizontal> to change layout\r\n            <Base>\r\n              <TransitionGroup>\r\n                <CSSTransition key={currentKey} timeout={timeout} classNames={animationName} exit={false}>\r\n                    <div>\r\n                        <Suspense fallback={<PageLoader/>}>\r\n                            <Switch location={location}>\r\n                                <Route path=\"/singleview\" component={waitFor(SingleView)}/>\r\n                                <Route path=\"/submenu\" component={waitFor(SubMenu)}/>\r\n\r\n                                <Redirect to=\"/singleview\"/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </div>\r\n                </CSSTransition>\r\n              </TransitionGroup>\r\n            </Base>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Routes);\r\n"]},"metadata":{},"sourceType":"module"}