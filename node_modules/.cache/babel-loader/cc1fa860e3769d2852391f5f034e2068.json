{"ast":null,"code":"/*!\n* screenfull\n* v3.3.3 - 2018-09-04\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n  'use strict';\n\n  var document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n  var isCommonjs = typeof module !== 'undefined' && module.exports;\n  var keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n  var fn = function () {\n    var val;\n    var fnMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // New WebKit\n    ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n    ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n    var i = 0;\n    var l = fnMap.length;\n    var ret = {};\n\n    for (; i < l; i++) {\n      val = fnMap[i];\n\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          ret[fnMap[0][i]] = val[i];\n        }\n\n        return ret;\n      }\n    }\n\n    return false;\n  }();\n\n  var eventNameMap = {\n    change: fn.fullscreenchange,\n    error: fn.fullscreenerror\n  };\n  var screenfull = {\n    request: function request(elem) {\n      var request = fn.requestFullscreen;\n      elem = elem || document.documentElement; // Work around Safari 5.1 bug: reports support for\n      // keyboard in fullscreen even though it doesn't.\n      // Browser sniffing, since the alternative with\n      // setTimeout is even worse.\n\n      if (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n        elem[request]();\n      } else {\n        elem[request](keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n      }\n    },\n    exit: function exit() {\n      document[fn.exitFullscreen]();\n    },\n    toggle: function toggle(elem) {\n      if (this.isFullscreen) {\n        this.exit();\n      } else {\n        this.request(elem);\n      }\n    },\n    onchange: function onchange(callback) {\n      this.on('change', callback);\n    },\n    onerror: function onerror(callback) {\n      this.on('error', callback);\n    },\n    on: function on(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.addEventListener(eventName, callback, false);\n      }\n    },\n    off: function off(event, callback) {\n      var eventName = eventNameMap[event];\n\n      if (eventName) {\n        document.removeEventListener(eventName, callback, false);\n      }\n    },\n    raw: fn\n  };\n\n  if (!fn) {\n    if (isCommonjs) {\n      module.exports = false;\n    } else {\n      window.screenfull = false;\n    }\n\n    return;\n  }\n\n  Object.defineProperties(screenfull, {\n    isFullscreen: {\n      get: function get() {\n        return Boolean(document[fn.fullscreenElement]);\n      }\n    },\n    element: {\n      enumerable: true,\n      get: function get() {\n        return document[fn.fullscreenElement];\n      }\n    },\n    enabled: {\n      enumerable: true,\n      get: function get() {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[fn.fullscreenEnabled]);\n      }\n    }\n  });\n\n  if (isCommonjs) {\n    module.exports = screenfull;\n  } else {\n    window.screenfull = screenfull;\n  }\n})();","map":{"version":3,"sources":["/Users/a18322/Desktop/podstruct-ui/node_modules/screenfull/dist/screenfull.js"],"names":["document","window","isCommonjs","module","exports","keyboardAllowed","Element","fn","val","fnMap","i","l","length","ret","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","isFullscreen","onchange","callback","on","onerror","event","eventName","addEventListener","off","removeEventListener","raw","Object","defineProperties","get","Boolean","fullscreenElement","element","enumerable","enabled","fullscreenEnabled"],"mappings":"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","sourcesContent":["/*!\n* screenfull\n* v3.3.3 - 2018-09-04\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed ? Element.ALLOW_KEYBOARD_INPUT : {});\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n"]},"metadata":{},"sourceType":"script"}