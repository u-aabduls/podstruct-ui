{"ast":null,"code":"/**\r\n * This library was created to emulate some jQuery features\r\n * used in this template only with Javascript and DOM\r\n * manipulation functions (IE10+).\r\n * All methods were designed for an adequate and specific use\r\n * and don't perform a deep validation on the arguments provided.\r\n *\r\n * IMPORTANT:\r\n * ==========\r\n * It's suggested NOT to use this library extensively unless you\r\n * understand what each method does. Instead, use only JS or\r\n * you might even need jQuery.\r\n */\n(function (global, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS-like\n    module.exports = factory();\n  } else {\n    // Browser\n    if (typeof global.jQuery === 'undefined') global.$ = factory();\n  }\n})(this, function () {\n  // HELPERS\n  function arrayFrom(obj) {\n    return 'length' in obj && obj !== window ? [].slice.call(obj) : [obj];\n  }\n\n  function _filter(ctx, fn) {\n    return [].filter.call(ctx, fn);\n  }\n\n  function map(ctx, fn) {\n    return [].map.call(ctx, fn);\n  }\n\n  function matches(item, selector) {\n    return (Element.prototype.matches || Element.prototype.msMatchesSelector).call(item, selector);\n  } // Events handler with simple scoped events support\n\n\n  var EventHandler = function EventHandler() {\n    this.events = {};\n  };\n\n  EventHandler.prototype = {\n    // event accepts: 'click' or 'click.scope'\n    bind: function bind(event, listener, target) {\n      var type = event.split('.')[0];\n      target.addEventListener(type, listener, false);\n      this.events[event] = {\n        type: type,\n        listener: listener\n      };\n    },\n    unbind: function unbind(event, target) {\n      if (event in this.events) {\n        target.removeEventListener(this.events[event].type, this.events[event].listener, false);\n        delete this.events[event];\n      }\n    }\n  }; // Object Definition\n\n  var Wrap = function Wrap(selector) {\n    this.selector = selector;\n    return this._setup([]);\n  }; // CONSTRUCTOR\n\n\n  Wrap.Constructor = function (param, attrs) {\n    var el = new Wrap(param);\n    return el.init(attrs);\n  }; // Core methods\n\n\n  Wrap.prototype = {\n    constructor: Wrap,\n\n    /**\r\n     * Initialize the object depending on param type\r\n     * [attrs] only to handle $(htmlString, {attributes})\r\n     */\n    init: function init(attrs) {\n      // empty object\n      if (!this.selector) return this; // selector === string\n\n      if (typeof this.selector === 'string') {\n        // if looks like markup, try to create an element\n        if (this.selector[0] === '<') {\n          var elem = this._setup([this._create(this.selector)]);\n\n          return attrs ? elem.attr(attrs) : elem;\n        } else return this._setup(arrayFrom(document.querySelectorAll(this.selector)));\n      } // selector === DOMElement\n\n\n      if (this.selector.nodeType) return this._setup([this.selector]);else // shorthand for DOMReady\n        if (typeof this.selector === 'function') return this._setup([document]).ready(this.selector); // Array like objects (e.g. NodeList/HTMLCollection)\n\n      return this._setup(arrayFrom(this.selector));\n    },\n\n    /**\r\n     * Creates a DOM element from a string\r\n     * Strictly supports the form: '<tag>' or '<tag/>'\r\n     */\n    _create: function _create(str) {\n      var nodeName = str.substr(str.indexOf('<') + 1, str.indexOf('>') - 1).replace('/', '');\n      return document.createElement(nodeName);\n    },\n\n    /** setup properties and array to element set */\n    _setup: function _setup(elements) {\n      var i = 0;\n\n      for (; i < elements.length; i++) {\n        delete this[i];\n      } // clean up old set\n\n\n      this.elements = elements;\n      this.length = elements.length;\n\n      for (i = 0; i < elements.length; i++) {\n        this[i] = elements[i];\n      } // new set\n\n\n      return this;\n    },\n    _first: function _first(cb, ret) {\n      var f = this.elements[0];\n      return f ? cb ? cb.call(this, f) : f : ret;\n    },\n\n    /** Common function for class manipulation  */\n    _classes: function _classes(method, classname) {\n      var cls = classname.split(' ');\n\n      if (cls.length > 1) {\n        cls.forEach(this._classes.bind(this, method));\n      } else {\n        if (method === 'contains') {\n          var elem = this._first();\n\n          return elem ? elem.classList.contains(classname) : false;\n        }\n\n        return classname === '' ? this : this.each(function (i, item) {\n          item.classList[method](classname);\n        });\n      }\n    },\n\n    /**\r\n     * Multi purpose function to set or get a (key, value)\r\n     * If no value, works as a getter for the given key\r\n     * key can be an object in the form {key: value, ...}\r\n     */\n    _access: function _access(key, value, fn) {\n      if (typeof key === 'object') {\n        for (var k in key) {\n          this._access(k, key[k], fn);\n        }\n      } else if (value === undefined) {\n        return this._first(function (elem) {\n          return fn(elem, key);\n        });\n      }\n\n      return this.each(function (i, item) {\n        fn(item, key, value);\n      });\n    },\n    each: function each(fn, arr) {\n      arr = arr ? arr : this.elements;\n\n      for (var i = 0; i < arr.length; i++) {\n        if (fn.call(arr[i], i, arr[i]) === false) break;\n      }\n\n      return this;\n    }\n  };\n  /** Allows to extend with new methods */\n\n  Wrap.extend = function (methods) {\n    Object.keys(methods).forEach(function (m) {\n      Wrap.prototype[m] = methods[m];\n    });\n  }; // DOM READY\n\n\n  Wrap.extend({\n    ready: function ready(fn) {\n      if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n        fn();\n      } else {\n        document.addEventListener('DOMContentLoaded', fn);\n      }\n\n      return this;\n    }\n  }); // ACCESS\n\n  Wrap.extend({\n    /** Get or set a css value */\n    css: function css(key, value) {\n      var getStyle = function getStyle(e, k) {\n        return e.style[k] || getComputedStyle(e)[k];\n      };\n\n      return this._access(key, value, function (item, k, val) {\n        var unit = typeof val === 'number' ? 'px' : '';\n        return val === undefined ? getStyle(item, k) : item.style[k] = val + unit;\n      });\n    },\n\n    /** Get an attribute or set it */\n    attr: function attr(key, value) {\n      return this._access(key, value, function (item, k, val) {\n        return val === undefined ? item.getAttribute(k) : item.setAttribute(k, val);\n      });\n    },\n\n    /** Get a property or set it */\n    prop: function prop(key, value) {\n      return this._access(key, value, function (item, k, val) {\n        return val === undefined ? item[k] : item[k] = val;\n      });\n    },\n    position: function position() {\n      return this._first(function (elem) {\n        return {\n          left: elem.offsetLeft,\n          top: elem.offsetTop\n        };\n      });\n    },\n    scrollTop: function scrollTop(value) {\n      return this._access('scrollTop', value, function (item, k, val) {\n        return val === undefined ? item[k] : item[k] = val;\n      });\n    },\n    outerHeight: function outerHeight(includeMargin) {\n      return this._first(function (elem) {\n        var style = getComputedStyle(elem);\n        var margins = includeMargin ? parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10) : 0;\n        return elem.offsetHeight + margins;\n      });\n    },\n\n    /**\r\n     * Find the position of the first element in the set\r\n     * relative to its sibling elements.\r\n     */\n    index: function index() {\n      return this._first(function (el) {\n        return arrayFrom(el.parentNode.children).indexOf(el);\n      }, -1);\n    }\n  }); // LOOKUP\n\n  Wrap.extend({\n    children: function children(selector) {\n      var childs = [];\n      this.each(function (i, item) {\n        childs = childs.concat(map(item.children, function (item) {\n          return item;\n        }));\n      });\n      return Wrap.Constructor(childs).filter(selector);\n    },\n    siblings: function siblings() {\n      var sibs = [];\n      this.each(function (i, item) {\n        sibs = sibs.concat(_filter(item.parentNode.children, function (child) {\n          return child !== item;\n        }));\n      });\n      return Wrap.Constructor(sibs);\n    },\n\n    /** Return the parent of each element in the current set */\n    parent: function parent() {\n      var par = map(this.elements, function (item) {\n        return item.parentNode;\n      });\n      return Wrap.Constructor(par);\n    },\n\n    /** Return ALL parents of each element in the current set */\n    parents: function parents(selector) {\n      var par = [];\n      this.each(function (i, item) {\n        for (var p = item.parentElement; p; p = p.parentElement) {\n          par.push(p);\n        }\n      });\n      return Wrap.Constructor(par).filter(selector);\n    },\n\n    /**\r\n     * Get the descendants of each element in the set, filtered by a selector\r\n     * Selector can't start with \">\" (:scope not supported on IE).\r\n     */\n    find: function find(selector) {\n      var found = [];\n      this.each(function (i, item) {\n        found = found.concat(map(item.querySelectorAll(\n        /*':scope ' + */\n        selector), function (fitem) {\n          return fitem;\n        }));\n      });\n      return Wrap.Constructor(found);\n    },\n\n    /** filter the actual set based on given selector */\n    filter: function filter(selector) {\n      if (!selector) return this;\n\n      var res = _filter(this.elements, function (item) {\n        return matches(item, selector);\n      });\n\n      return Wrap.Constructor(res);\n    },\n\n    /** Works only with a string selector */\n    is: function is(selector) {\n      var found = false;\n      this.each(function (i, item) {\n        return !(found = matches(item, selector));\n      });\n      return found;\n    }\n  }); // ELEMENTS\n\n  Wrap.extend({\n    /**\r\n     * append current set to given node\r\n     * expects a dom node or set\r\n     * if element is a set, prepends only the first\r\n     */\n    appendTo: function appendTo(elem) {\n      elem = elem.nodeType ? elem : elem._first();\n      return this.each(function (i, item) {\n        elem.appendChild(item);\n      });\n    },\n\n    /**\r\n     * Append a domNode to each element in the set\r\n     * if element is a set, append only the first\r\n     */\n    append: function append(elem) {\n      elem = elem.nodeType ? elem : elem._first();\n      return this.each(function (i, item) {\n        item.appendChild(elem);\n      });\n    },\n\n    /**\r\n     * Insert the current set of elements after the element\r\n     * that matches the given selector in param\r\n     */\n    insertAfter: function insertAfter(selector) {\n      var target = document.querySelector(selector);\n      return this.each(function (i, item) {\n        target.parentNode.insertBefore(item, target.nextSibling);\n      });\n    },\n\n    /**\r\n     * Clones all element in the set\r\n     * returns a new set with the cloned elements\r\n     */\n    clone: function clone() {\n      var clones = map(this.elements, function (item) {\n        return item.cloneNode(true);\n      });\n      return Wrap.Constructor(clones);\n    },\n\n    /** Remove all node in the set from DOM. */\n    remove: function remove() {\n      this.each(function (i, item) {\n        delete item.events;\n        delete item.data;\n        if (item.parentNode) item.parentNode.removeChild(item);\n      });\n\n      this._setup([]);\n    }\n  }); // DATASETS\n\n  Wrap.extend({\n    /**\r\n     * Expected key in camelCase format\r\n     * if value provided save data into element set\r\n     * if not, return data for the first element\r\n     */\n    data: function data(key, value) {\n      var hasJSON = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n          dataAttr = 'data-' + key.replace(/[A-Z]/g, '-$&').toLowerCase();\n\n      if (value === undefined) {\n        return this._first(function (el) {\n          if (el.data && el.data[key]) return el.data[key];else {\n            var data = el.getAttribute(dataAttr);\n            if (data === 'true') return true;\n            if (data === 'false') return false;\n            if (data === +data + '') return +data;\n            if (hasJSON.test(data)) return JSON.parse(data);\n            return data;\n          }\n        });\n      } else {\n        return this.each(function (i, item) {\n          item.data = item.data || {};\n          item.data[key] = value;\n        });\n      }\n    }\n  }); // EVENTS\n\n  Wrap.extend({\n    trigger: function trigger(type) {\n      type = type.split('.')[0]; // ignore namespace\n\n      var event = document.createEvent('HTMLEvents');\n      event.initEvent(type, true, false);\n      return this.each(function (i, item) {\n        item.dispatchEvent(event);\n      });\n    },\n    blur: function blur() {\n      return this.trigger('blur');\n    },\n    focus: function focus() {\n      return this.trigger('focus');\n    },\n    on: function on(event, callback) {\n      return this.each(function (i, item) {\n        if (!item.events) item.events = new EventHandler();\n        event.split(' ').forEach(function (ev) {\n          item.events.bind(ev, callback, item);\n        });\n      });\n    },\n    off: function off(event) {\n      return this.each(function (i, item) {\n        if (item.events) {\n          item.events.unbind(event, item);\n          delete item.events;\n        }\n      });\n    }\n  }); // CLASSES\n\n  Wrap.extend({\n    toggleClass: function toggleClass(classname) {\n      return this._classes('toggle', classname);\n    },\n    addClass: function addClass(classname) {\n      return this._classes('add', classname);\n    },\n    removeClass: function removeClass(classname) {\n      return this._classes('remove', classname);\n    },\n    hasClass: function hasClass(classname) {\n      return this._classes('contains', classname);\n    }\n  });\n  return Wrap.Constructor;\n});","map":{"version":3,"sources":["/Users/a18322/Desktop/podstruct-ui/src/components/Common/wrapper.js"],"names":["global","factory","exports","module","jQuery","$","arrayFrom","obj","window","slice","call","filter","ctx","fn","map","matches","item","selector","Element","prototype","msMatchesSelector","EventHandler","events","bind","event","listener","target","type","split","addEventListener","unbind","removeEventListener","Wrap","_setup","Constructor","param","attrs","el","init","constructor","elem","_create","attr","document","querySelectorAll","nodeType","ready","str","nodeName","substr","indexOf","replace","createElement","elements","i","length","_first","cb","ret","f","_classes","method","classname","cls","forEach","classList","contains","each","_access","key","value","k","undefined","arr","extend","methods","Object","keys","m","attachEvent","readyState","css","getStyle","e","style","getComputedStyle","val","unit","getAttribute","setAttribute","prop","position","left","offsetLeft","top","offsetTop","scrollTop","outerHeight","includeMargin","margins","parseInt","marginTop","marginBottom","offsetHeight","index","parentNode","children","childs","concat","siblings","sibs","child","parent","par","parents","p","parentElement","push","find","found","fitem","res","is","appendTo","appendChild","append","insertAfter","querySelector","insertBefore","nextSibling","clone","clones","cloneNode","remove","data","removeChild","hasJSON","dataAttr","toLowerCase","test","JSON","parse","trigger","createEvent","initEvent","dispatchEvent","blur","focus","on","callback","ev","off","toggleClass","addClass","removeClass","hasClass"],"mappings":"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","sourcesContent":["/**\r\n * This library was created to emulate some jQuery features\r\n * used in this template only with Javascript and DOM\r\n * manipulation functions (IE10+).\r\n * All methods were designed for an adequate and specific use\r\n * and don't perform a deep validation on the arguments provided.\r\n *\r\n * IMPORTANT:\r\n * ==========\r\n * It's suggested NOT to use this library extensively unless you\r\n * understand what each method does. Instead, use only JS or\r\n * you might even need jQuery.\r\n */\r\n\r\n(function(global, factory) {\r\n    if (typeof exports === 'object') { // CommonJS-like\r\n        module.exports = factory();\r\n    } else { // Browser\r\n        if (typeof global.jQuery === 'undefined')\r\n            global.$ = factory();\r\n    }\r\n}(this, function() {\r\n\r\n    // HELPERS\r\n    function arrayFrom(obj) {\r\n        return ('length' in obj) && (obj !== window) ? [].slice.call(obj) : [obj];\r\n    }\r\n\r\n    function filter(ctx, fn) {\r\n        return [].filter.call(ctx, fn);\r\n    }\r\n\r\n    function map(ctx, fn) {\r\n        return [].map.call(ctx, fn);\r\n    }\r\n\r\n    function matches(item, selector) {\r\n        return (Element.prototype.matches || Element.prototype.msMatchesSelector).call(item, selector)\r\n    }\r\n\r\n    // Events handler with simple scoped events support\r\n    var EventHandler = function() {\r\n        this.events = {};\r\n    }\r\n    EventHandler.prototype = {\r\n        // event accepts: 'click' or 'click.scope'\r\n        bind: function(event, listener, target) {\r\n            var type = event.split('.')[0];\r\n            target.addEventListener(type, listener, false);\r\n            this.events[event] = {\r\n                type: type,\r\n                listener: listener\r\n            }\r\n        },\r\n        unbind: function(event, target) {\r\n            if (event in this.events) {\r\n                target.removeEventListener(this.events[event].type, this.events[event].listener, false);\r\n                delete this.events[event];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Object Definition\r\n    var Wrap = function(selector) {\r\n        this.selector = selector;\r\n        return this._setup([]);\r\n    }\r\n\r\n    // CONSTRUCTOR\r\n    Wrap.Constructor = function(param, attrs) {\r\n        var el = new Wrap(param);\r\n        return el.init(attrs);\r\n    };\r\n\r\n    // Core methods\r\n    Wrap.prototype = {\r\n        constructor: Wrap,\r\n        /**\r\n         * Initialize the object depending on param type\r\n         * [attrs] only to handle $(htmlString, {attributes})\r\n         */\r\n        init: function(attrs) {\r\n            // empty object\r\n            if (!this.selector) return this;\r\n            // selector === string\r\n            if (typeof this.selector === 'string') {\r\n                // if looks like markup, try to create an element\r\n                if (this.selector[0] === '<') {\r\n                    var elem = this._setup([this._create(this.selector)])\r\n                    return attrs ? elem.attr(attrs) : elem;\r\n                } else\r\n                    return this._setup(arrayFrom(document.querySelectorAll(this.selector)))\r\n            }\r\n            // selector === DOMElement\r\n            if (this.selector.nodeType)\r\n                return this._setup([this.selector])\r\n            else // shorthand for DOMReady\r\n                if (typeof this.selector === 'function')\r\n                    return this._setup([document]).ready(this.selector)\r\n            // Array like objects (e.g. NodeList/HTMLCollection)\r\n            return this._setup(arrayFrom(this.selector))\r\n        },\r\n        /**\r\n         * Creates a DOM element from a string\r\n         * Strictly supports the form: '<tag>' or '<tag/>'\r\n         */\r\n        _create: function(str) {\r\n            var nodeName = str.substr(str.indexOf('<') + 1, str.indexOf('>') - 1).replace('/', '')\r\n            return document.createElement(nodeName);\r\n        },\r\n        /** setup properties and array to element set */\r\n        _setup: function(elements) {\r\n            var i = 0;\r\n            for (; i < elements.length; i++) delete this[i]; // clean up old set\r\n            this.elements = elements;\r\n            this.length = elements.length;\r\n            for (i = 0; i < elements.length; i++) this[i] = elements[i] // new set\r\n            return this;\r\n        },\r\n        _first: function(cb, ret) {\r\n            var f = this.elements[0];\r\n            return f ? (cb ? cb.call(this, f) : f) : ret;\r\n        },\r\n        /** Common function for class manipulation  */\r\n        _classes: function(method, classname) {\r\n            var cls = classname.split(' ');\r\n            if (cls.length > 1) {\r\n                cls.forEach(this._classes.bind(this, method))\r\n            } else {\r\n                if (method === 'contains') {\r\n                    var elem = this._first();\r\n                    return elem ? elem.classList.contains(classname) : false;\r\n                }\r\n                return (classname === '') ? this : this.each(function(i, item) {\r\n                    item.classList[method](classname);\r\n                })\r\n            }\r\n        },\r\n        /**\r\n         * Multi purpose function to set or get a (key, value)\r\n         * If no value, works as a getter for the given key\r\n         * key can be an object in the form {key: value, ...}\r\n         */\r\n        _access: function(key, value, fn) {\r\n            if (typeof key === 'object') {\r\n                for (var k in key) {\r\n                    this._access(k, key[k], fn);\r\n                }\r\n            } else if (value === undefined) {\r\n                return this._first(function(elem) {\r\n                    return fn(elem, key);\r\n                });\r\n            }\r\n            return this.each(function(i, item) {\r\n                fn(item, key, value);\r\n            });\r\n        },\r\n        each: function(fn, arr) {\r\n            arr = arr ? arr : this.elements;\r\n            for (var i = 0; i < arr.length; i++) {\r\n                if (fn.call(arr[i], i, arr[i]) === false)\r\n                    break;\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /** Allows to extend with new methods */\r\n    Wrap.extend = function(methods) {\r\n        Object.keys(methods).forEach(function(m) {\r\n            Wrap.prototype[m] = methods[m]\r\n        })\r\n    }\r\n\r\n    // DOM READY\r\n    Wrap.extend({\r\n        ready: function(fn) {\r\n            if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\r\n                fn();\r\n            } else {\r\n                document.addEventListener('DOMContentLoaded', fn);\r\n            }\r\n            return this;\r\n        }\r\n    })\r\n    // ACCESS\r\n    Wrap.extend({\r\n        /** Get or set a css value */\r\n        css: function(key, value) {\r\n            var getStyle = function(e, k) { return e.style[k] || getComputedStyle(e)[k]; };\r\n            return this._access(key, value, function(item, k, val) {\r\n                var unit = (typeof val === 'number') ? 'px' : '';\r\n                return val === undefined ? getStyle(item, k) : (item.style[k] = val + unit);\r\n            })\r\n        },\r\n        /** Get an attribute or set it */\r\n        attr: function(key, value) {\r\n            return this._access(key, value, function(item, k, val) {\r\n                return val === undefined ? item.getAttribute(k) : item.setAttribute(k, val)\r\n            })\r\n        },\r\n        /** Get a property or set it */\r\n        prop: function(key, value) {\r\n            return this._access(key, value, function(item, k, val) {\r\n                return val === undefined ? item[k] : (item[k] = val);\r\n            })\r\n        },\r\n        position: function() {\r\n            return this._first(function(elem) {\r\n                return { left: elem.offsetLeft, top: elem.offsetTop }\r\n            });\r\n        },\r\n        scrollTop: function(value) {\r\n            return this._access('scrollTop', value, function(item, k, val) {\r\n                return val === undefined ? item[k] : (item[k] = val);\r\n            })\r\n        },\r\n        outerHeight: function(includeMargin) {\r\n            return this._first(function(elem) {\r\n                var style = getComputedStyle(elem);\r\n                var margins = includeMargin ? (parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10)) : 0;\r\n                return elem.offsetHeight + margins;\r\n            });\r\n        },\r\n        /**\r\n         * Find the position of the first element in the set\r\n         * relative to its sibling elements.\r\n         */\r\n        index: function() {\r\n            return this._first(function(el) {\r\n                return arrayFrom(el.parentNode.children).indexOf(el)\r\n            }, -1);\r\n        }\r\n    })\r\n    // LOOKUP\r\n    Wrap.extend({\r\n        children: function(selector) {\r\n            var childs = [];\r\n            this.each(function(i, item) {\r\n                childs = childs.concat(map(item.children, function(item) {\r\n                    return item\r\n                }))\r\n            })\r\n            return Wrap.Constructor(childs).filter(selector);\r\n        },\r\n        siblings: function() {\r\n            var sibs = []\r\n            this.each(function(i, item) {\r\n                sibs = sibs.concat(filter(item.parentNode.children, function(child) {\r\n                    return child !== item;\r\n                }))\r\n            })\r\n            return Wrap.Constructor(sibs)\r\n        },\r\n        /** Return the parent of each element in the current set */\r\n        parent: function() {\r\n            var par = map(this.elements, function(item) {\r\n                return item.parentNode;\r\n            })\r\n            return Wrap.Constructor(par)\r\n        },\r\n        /** Return ALL parents of each element in the current set */\r\n        parents: function(selector) {\r\n            var par = [];\r\n            this.each(function(i, item) {\r\n                for (var p = item.parentElement; p; p = p.parentElement)\r\n                    par.push(p);\r\n            })\r\n            return Wrap.Constructor(par).filter(selector)\r\n        },\r\n        /**\r\n         * Get the descendants of each element in the set, filtered by a selector\r\n         * Selector can't start with \">\" (:scope not supported on IE).\r\n         */\r\n        find: function(selector) {\r\n            var found = []\r\n            this.each(function(i, item) {\r\n                found = found.concat(map(item.querySelectorAll( /*':scope ' + */ selector), function(fitem) {\r\n                    return fitem\r\n                }))\r\n            })\r\n            return Wrap.Constructor(found)\r\n        },\r\n        /** filter the actual set based on given selector */\r\n        filter: function(selector) {\r\n            if (!selector) return this;\r\n            var res = filter(this.elements, function(item) {\r\n                return matches(item, selector)\r\n            })\r\n            return Wrap.Constructor(res)\r\n        },\r\n        /** Works only with a string selector */\r\n        is: function(selector) {\r\n            var found = false;\r\n            this.each(function(i, item) {\r\n                return !(found = matches(item, selector))\r\n            })\r\n            return found;\r\n        }\r\n    });\r\n    // ELEMENTS\r\n    Wrap.extend({\r\n        /**\r\n         * append current set to given node\r\n         * expects a dom node or set\r\n         * if element is a set, prepends only the first\r\n         */\r\n        appendTo: function(elem) {\r\n            elem = elem.nodeType ? elem : elem._first()\r\n            return this.each(function(i, item) {\r\n                elem.appendChild(item);\r\n            })\r\n        },\r\n        /**\r\n         * Append a domNode to each element in the set\r\n         * if element is a set, append only the first\r\n         */\r\n        append: function(elem) {\r\n            elem = elem.nodeType ? elem : elem._first()\r\n            return this.each(function(i, item) {\r\n                item.appendChild(elem);\r\n            })\r\n        },\r\n        /**\r\n         * Insert the current set of elements after the element\r\n         * that matches the given selector in param\r\n         */\r\n        insertAfter: function(selector) {\r\n            var target = document.querySelector(selector);\r\n            return this.each(function(i, item) {\r\n                target.parentNode.insertBefore(item, target.nextSibling);\r\n            })\r\n        },\r\n        /**\r\n         * Clones all element in the set\r\n         * returns a new set with the cloned elements\r\n         */\r\n        clone: function() {\r\n            var clones = map(this.elements, function(item) {\r\n                return item.cloneNode(true)\r\n            })\r\n            return Wrap.Constructor(clones);\r\n        },\r\n        /** Remove all node in the set from DOM. */\r\n        remove: function() {\r\n            this.each(function(i, item) {\r\n                delete item.events;\r\n                delete item.data;\r\n                if (item.parentNode) item.parentNode.removeChild(item);\r\n            })\r\n            this._setup([])\r\n        }\r\n    })\r\n    // DATASETS\r\n    Wrap.extend({\r\n        /**\r\n         * Expected key in camelCase format\r\n         * if value provided save data into element set\r\n         * if not, return data for the first element\r\n         */\r\n        data: function(key, value) {\r\n            var hasJSON = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n                dataAttr = 'data-' + key.replace(/[A-Z]/g, '-$&').toLowerCase();\r\n            if (value === undefined) {\r\n                return this._first(function(el) {\r\n                    if (el.data && el.data[key])\r\n                        return el.data[key];\r\n                    else {\r\n                        var data = el.getAttribute(dataAttr)\r\n                        if (data === 'true') return true;\r\n                        if (data === 'false') return false;\r\n                        if (data === +data + '') return +data;\r\n                        if (hasJSON.test(data)) return JSON.parse(data);\r\n                        return data;\r\n                    }\r\n                });\r\n            } else {\r\n                return this.each(function(i, item) {\r\n                    item.data = item.data || {};\r\n                    item.data[key] = value;\r\n                });\r\n            }\r\n        }\r\n    })\r\n    // EVENTS\r\n    Wrap.extend({\r\n        trigger: function(type) {\r\n            type = type.split('.')[0]; // ignore namespace\r\n            var event = document.createEvent('HTMLEvents');\r\n            event.initEvent(type, true, false);\r\n            return this.each(function(i, item) {\r\n                item.dispatchEvent(event);\r\n            })\r\n        },\r\n        blur: function() {\r\n            return this.trigger('blur')\r\n        },\r\n        focus: function() {\r\n            return this.trigger('focus')\r\n        },\r\n        on: function(event, callback) {\r\n            return this.each(function(i, item) {\r\n                if (!item.events) item.events = new EventHandler();\r\n                event.split(' ').forEach(function(ev) {\r\n                    item.events.bind(ev, callback, item);\r\n                })\r\n            })\r\n        },\r\n        off: function(event) {\r\n            return this.each(function(i, item) {\r\n                if (item.events) {\r\n                    item.events.unbind(event, item);\r\n                    delete item.events;\r\n                }\r\n            })\r\n        }\r\n    })\r\n    // CLASSES\r\n    Wrap.extend({\r\n        toggleClass: function(classname) {\r\n            return this._classes('toggle', classname);\r\n        },\r\n        addClass: function(classname) {\r\n            return this._classes('add', classname);\r\n        },\r\n        removeClass: function(classname) {\r\n            return this._classes('remove', classname);\r\n        },\r\n        hasClass: function(classname) {\r\n            return this._classes('contains', classname);\r\n        }\r\n    })\r\n\r\n    return Wrap.Constructor\r\n\r\n}));"]},"metadata":{},"sourceType":"module"}