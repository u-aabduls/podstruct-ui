{"ast":null,"code":"import _defineProperty from \"/Users/a18322/Desktop/reactjs-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/a18322/Desktop/reactjs-seed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { TOGGLE_SETTING, CHANGE_SETTING } from '../actions/actions';\nvar initialSettings = {\n  /* Layout fixed. Scroll content only */\n  isFixed: true,\n\n  /* Sidebar collapsed */\n  isCollapsed: false,\n\n  /* Boxed layout */\n  isBoxed: false,\n\n  /* Floating sidebar */\n  isFloat: false,\n\n  /* Sidebar show menu on hover only */\n  asideHover: false,\n\n  /* Show sidebar scrollbar (dont' hide it) */\n  asideScrollbar: false,\n\n  /* Sidebar collapsed with big icons and text */\n  isCollapsedText: false,\n\n  /* Toggle for the offsidebar */\n  offsidebarOpen: false,\n\n  /* Toggle for the sidebar offcanvas (mobile) */\n  asideToggled: false,\n\n  /* Toggle for the sidebar user block */\n  showUserBlock: false,\n\n  /* Enables layout horizontal */\n  horizontal: false,\n\n  /* Full size layout */\n  useFullLayout: false,\n\n  /* Hide footer */\n  hiddenFooter: false\n};\n\nvar settingsReducer = function settingsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSettings;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_SETTING:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.name, !state[action.name]));\n\n    case CHANGE_SETTING:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.name, action.value));\n\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;","map":{"version":3,"sources":["/Users/a18322/Desktop/reactjs-seed/src/store/reducers/settings.reducer.js"],"names":["TOGGLE_SETTING","CHANGE_SETTING","initialSettings","isFixed","isCollapsed","isBoxed","isFloat","asideHover","asideScrollbar","isCollapsedText","offsidebarOpen","asideToggled","showUserBlock","horizontal","useFullLayout","hiddenFooter","settingsReducer","state","action","type","name","value"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,oBAA/C;AAEA,IAAMC,eAAe,GAAG;AACpB;AACAC,EAAAA,OAAO,EAAE,IAFW;;AAGpB;AACAC,EAAAA,WAAW,EAAE,KAJO;;AAKpB;AACAC,EAAAA,OAAO,EAAE,KANW;;AAOpB;AACAC,EAAAA,OAAO,EAAE,KARW;;AASpB;AACAC,EAAAA,UAAU,EAAE,KAVQ;;AAWpB;AACAC,EAAAA,cAAc,EAAE,KAZI;;AAapB;AACAC,EAAAA,eAAe,EAAE,KAdG;;AAepB;AACAC,EAAAA,cAAc,EAAE,KAhBI;;AAiBpB;AACAC,EAAAA,YAAY,EAAE,KAlBM;;AAmBpB;AACAC,EAAAA,aAAa,EAAE,KApBK;;AAqBpB;AACAC,EAAAA,UAAU,EAAE,KAtBQ;;AAuBpB;AACAC,EAAAA,aAAa,EAAE,KAxBK;;AAyBpB;AACAC,EAAAA,YAAY,EAAE;AA1BM,CAAxB;;AA6BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAqC;AAAA,MAApCC,KAAoC,uEAA5Bf,eAA4B;AAAA,MAAXgB,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,cAAL;AACI,6CACOiB,KADP,2BAEKC,MAAM,CAACE,IAFZ,EAEmB,CAACH,KAAK,CAACC,MAAM,CAACE,IAAR,CAFzB;;AAIJ,SAAKnB,cAAL;AACI,6CACOgB,KADP,2BAEKC,MAAM,CAACE,IAFZ,EAEmBF,MAAM,CAACG,KAF1B;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,eAAf","sourcesContent":["import { TOGGLE_SETTING, CHANGE_SETTING } from '../actions/actions';\r\n\r\nconst initialSettings = {\r\n    /* Layout fixed. Scroll content only */\r\n    isFixed: true,\r\n    /* Sidebar collapsed */\r\n    isCollapsed: false,\r\n    /* Boxed layout */\r\n    isBoxed: false,\r\n    /* Floating sidebar */\r\n    isFloat: false,\r\n    /* Sidebar show menu on hover only */\r\n    asideHover: false,\r\n    /* Show sidebar scrollbar (dont' hide it) */\r\n    asideScrollbar: false,\r\n    /* Sidebar collapsed with big icons and text */\r\n    isCollapsedText: false,\r\n    /* Toggle for the offsidebar */\r\n    offsidebarOpen: false,\r\n    /* Toggle for the sidebar offcanvas (mobile) */\r\n    asideToggled: false,\r\n    /* Toggle for the sidebar user block */\r\n    showUserBlock: false,\r\n    /* Enables layout horizontal */\r\n    horizontal: false,\r\n    /* Full size layout */\r\n    useFullLayout: false,\r\n    /* Hide footer */\r\n    hiddenFooter: false\r\n};\r\n\r\nconst settingsReducer = (state = initialSettings, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_SETTING:\r\n            return {\r\n                ...state,\r\n                [action.name]: !state[action.name]\r\n            }\r\n        case CHANGE_SETTING:\r\n            return {\r\n                ...state,\r\n                [action.name]: action.value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default settingsReducer;"]},"metadata":{},"sourceType":"module"}