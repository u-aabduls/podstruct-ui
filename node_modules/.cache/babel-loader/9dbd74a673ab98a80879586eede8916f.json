{"ast":null,"code":"import _toConsumableArray from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/a18322/Desktop/podstruct-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/a18322/Desktop/podstruct-fe/src/components/Pages/Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Input, CustomInput } from 'reactstrap';\nimport FormValidator from '../Forms/FormValidator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      formRegister: {\n        email: '',\n        firstName: '',\n        lastName: '',\n        podName: '',\n        password: '',\n        confirmedPassword: '',\n        terms: false\n      }\n    };\n\n    _this.validateOnChange = function (event) {\n      var _objectSpread3;\n\n      var input = event.target;\n      var form = input.form;\n      var value = input.type === 'checkbox' ? input.checked : input.value;\n      var result = FormValidator.validate(input);\n\n      _this.setState(_defineProperty({}, form.name, _objectSpread(_objectSpread({}, _this.state[form.name]), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, input.name, value), _defineProperty(_objectSpread3, \"errors\", _objectSpread(_objectSpread({}, _this.state[form.name].errors), {}, _defineProperty({}, input.name, result))), _objectSpread3))));\n    };\n\n    _this.onSubmit = function (e) {\n      var form = e.target;\n\n      var inputs = _toConsumableArray(form.elements).filter(function (i) {\n        return ['INPUT', 'SELECT'].includes(i.nodeName);\n      });\n\n      var _FormValidator$bulkVa = FormValidator.bulkValidate(inputs),\n          errors = _FormValidator$bulkVa.errors,\n          hasError = _FormValidator$bulkVa.hasError;\n\n      _this.setState(_defineProperty({}, form.name, _objectSpread(_objectSpread({}, _this.state[form.name]), {}, {\n        errors: errors\n      })));\n\n      console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!');\n      e.preventDefault();\n    };\n\n    _this.hasError = function (formName, inputName, method) {\n      return _this.state[formName] && _this.state[formName].errors && _this.state[formName].errors[inputName] && _this.state[formName].errors[inputName][method];\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-center mt-4 wd-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-flat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header text-center bg-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"block-center\",\n                src: \"img/logo.png\",\n                alt: \"Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center py-2\",\n              children: \"SIGNUP TO GET INSTANT ACCESS.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"mb-3\",\n              name: \"formRegister\",\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputEmail1\",\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"email\",\n                    name: \"email\",\n                    className: \"border-right-0\",\n                    placeholder: \"Enter email\",\n                    invalid: this.hasError('formRegister', 'email', 'required') || this.hasError('formRegister', 'email', 'email'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"required\\\", \\\"email\\\"]\",\n                    value: this.state.formRegister.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-envelope\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 37\n                  }, this), this.hasError('formRegister', 'email', 'required') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Email is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 91\n                  }, this), this.hasError('formRegister', 'email', 'email') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Email must be a valid email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 88\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputPassword1\",\n                  children: \"First name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    id: \"id-firstName\",\n                    name: \"firstName\",\n                    className: \"border-right-0\",\n                    placeholder: \"First name\",\n                    invalid: this.hasError('formRegister', 'firstName', 'required') || this.hasError('formRegister', 'firstName', 'minlen') || this.hasError('formRegister', 'firstName', 'name'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"required\\\", \\\"minlen\\\", \\\"name\\\"]\",\n                    \"data-param\": \"2\",\n                    value: this.state.formRegister.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-book\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this), this.hasError('formRegister', 'firstName', 'required') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"First name is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 95\n                  }, this), this.hasError('formRegister', 'firstName', 'minlen') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"First name must have at least 2 characters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 93\n                  }, this), this.hasError('formRegister', 'firstName', 'name') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"First name must contain alpha characters only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 91\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputPassword1\",\n                  children: \"Last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    id: \"id-lastName\",\n                    name: \"lastName\",\n                    className: \"border-right-0\",\n                    placeholder: \"Last name\",\n                    invalid: this.hasError('formRegister', 'lastName', 'required') || this.hasError('formRegister', 'lastName', 'minlen') || this.hasError('formRegister', 'lastName', 'name'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"required\\\", \\\"minlen\\\", \\\"name\\\"]\",\n                    \"data-param\": \"2\",\n                    value: this.state.formRegister.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-book\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 37\n                  }, this), this.hasError('formRegister', 'lastName', 'required') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Last name is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 94\n                  }, this), this.hasError('formRegister', 'lastName', 'minlen') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Last name must have at least 2 characters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 92\n                  }, this), this.hasError('formRegister', 'lastName', 'name') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Last name must contain alpha characters only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 90\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputPassword1\",\n                  children: \"POD name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    id: \"id-podName\",\n                    name: \"podName\",\n                    className: \"border-right-0\",\n                    placeholder: \"POD name\",\n                    invalid: this.hasError('formRegister', 'podName', 'required') || this.hasError('formRegister', 'podName', 'minlen') || this.hasError('formRegister', 'podName', 'podname'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"required\\\", \\\"minlen\\\", \\\"podname\\\"]\",\n                    \"data-param\": \"2\",\n                    value: this.state.formRegister.podName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-users\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 37\n                  }, this), this.hasError('formRegister', 'podName', 'required') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"POD name is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 93\n                  }, this), this.hasError('formRegister', 'podName', 'minlen') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"POD name must have at least 2 characters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 91\n                  }, this), this.hasError('formRegister', 'podName', 'podname') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"POD name must be alphanumeric\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 92\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputPassword1\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    id: \"id-password\",\n                    name: \"password\",\n                    className: \"border-right-0\",\n                    placeholder: \"Password\",\n                    invalid: this.hasError('formRegister', 'password', 'required') || this.hasError('formRegister', 'password', 'password'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"required\\\", \\\"password\\\"]\",\n                    value: this.state.formRegister.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-lock\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 37\n                  }, this), this.hasError('formRegister', 'password', 'required') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Password is required\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 94\n                  }, this), this.hasError('formRegister', 'password', 'password') && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Password must have at least 8 characters including each of one of the following: upper case, lower case, numeric and special character.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-muted\",\n                  htmlFor: \"signupInputRePassword1\",\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group with-focus\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    name: \"confirmedPassword\",\n                    className: \"border-right-0\",\n                    placeholder: \"Retype assword\",\n                    invalid: this.hasError('formRegister', 'confirmedPassword', 'equalto'),\n                    onChange: this.validateOnChange,\n                    \"data-validate\": \"[\\\"equalto\\\"]\",\n                    value: this.state.formRegister.confirmedPassword,\n                    \"data-param\": \"id-password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-group-append\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"input-group-text text-muted bg-transparent border-left-0\",\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        className: \"fa fa-lock\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"invalid-feedback\",\n                    children: \"Password confirmation doesn't match password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-block btn-primary mt-3\",\n                type: \"submit\",\n                children: \"Create account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pt-3 text-center\",\n              children: \"Have an account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"login\",\n              className: \"btn btn-block btn-secondary\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"\\xA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mx-2\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Angle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bootstrap Admin Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/a18322/Desktop/podstruct-fe/src/components/Pages/Register.js"],"names":["React","Component","Link","Input","CustomInput","FormValidator","Register","state","formRegister","email","firstName","lastName","podName","password","confirmedPassword","terms","validateOnChange","event","input","target","form","value","type","checked","result","validate","setState","name","errors","onSubmit","e","inputs","elements","filter","i","includes","nodeName","bulkValidate","hasError","console","log","preventDefault","formName","inputName","method"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, CustomInput } from 'reactstrap';\r\n\r\nimport FormValidator from '../Forms/FormValidator.js';\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n        formRegister: {\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            podName: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n            terms: false\r\n        }\r\n    }\r\n\r\n     /**\r\n      * Validate input using onChange event\r\n      * @param  {String} formName The name of the form in the state object\r\n      * @return {Function} a function used for the event\r\n      */\r\n    validateOnChange = event => {\r\n        const input = event.target;\r\n        const form = input.form\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        const result = FormValidator.validate(input);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value,\r\n                errors: {\r\n                    ...this.state[form.name].errors,\r\n                    [input.name]: result\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit = e => {\r\n        const form = e.target;\r\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\r\n\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    /* Simplify error check */\r\n    hasError = (formName, inputName, method) => {\r\n        return  this.state[formName] &&\r\n                this.state[formName].errors &&\r\n                this.state[formName].errors[inputName] &&\r\n                this.state[formName].errors[inputName][method]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"block-center mt-4 wd-xl\">\r\n                {/* START card */}\r\n                <div className=\"card card-flat\">\r\n                    <div className=\"card-header text-center bg-dark\">\r\n                        <a href=\"\">\r\n                            <img className=\"block-center\" src=\"img/logo.png\" alt=\"Logo\"/>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"text-center py-2\">SIGNUP TO GET INSTANT ACCESS.</p>\r\n                        <form className=\"mb-3\" name=\"formRegister\" onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputEmail1\">Email address</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Enter email\"\r\n                                        invalid={this.hasError('formRegister','email','required') || this.hasError('formRegister','email','email')}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"email\"]'\r\n                                        value={this.state.formRegister.email}/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-envelope\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formRegister','email','required') && <span className=\"invalid-feedback\">Email is required</span> }\r\n                                    { this.hasError('formRegister','email','email') && <span className=\"invalid-feedback\">Email must be a valid email</span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputPassword1\">First name</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\"\r\n                                        id=\"id-firstName\"\r\n                                        name=\"firstName\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"First name\"\r\n                                        invalid={\r\n                                                this.hasError('formRegister','firstName','required') \r\n                                            ||  this.hasError('formRegister','firstName','minlen')\r\n                                            ||  this.hasError('formRegister','firstName','name')\r\n                                        }\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"minlen\", \"name\"]'\r\n                                        data-param='2'\r\n                                        value={this.state.formRegister.firstName}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-book\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formRegister','firstName','required') && <span className=\"invalid-feedback\">First name is required</span> }\r\n                                    { this.hasError('formRegister','firstName','minlen') && <span className=\"invalid-feedback\">First name must have at least 2 characters</span> }\r\n                                    { this.hasError('formRegister','firstName','name') && <span className=\"invalid-feedback\">First name must contain alpha characters only</span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputPassword1\">Last name</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\"\r\n                                        id=\"id-lastName\"\r\n                                        name=\"lastName\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Last name\"\r\n                                        invalid={\r\n                                                this.hasError('formRegister','lastName','required') \r\n                                            ||  this.hasError('formRegister','lastName','minlen')\r\n                                            ||  this.hasError('formRegister','lastName','name')\r\n                                        }                                        \r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"minlen\", \"name\"]'\r\n                                        data-param='2'\r\n                                        value={this.state.formRegister.lastName}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-book\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formRegister','lastName','required') && <span className=\"invalid-feedback\">Last name is required</span> }\r\n                                    { this.hasError('formRegister','lastName','minlen') && <span className=\"invalid-feedback\">Last name must have at least 2 characters</span> }\r\n                                    { this.hasError('formRegister','lastName','name') && <span className=\"invalid-feedback\">Last name must contain alpha characters only</span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputPassword1\">POD name</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\"\r\n                                        id=\"id-podName\"\r\n                                        name=\"podName\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"POD name\"\r\n                                        invalid={\r\n                                                this.hasError('formRegister','podName','required') \r\n                                            ||  this.hasError('formRegister','podName','minlen')\r\n                                            ||  this.hasError('formRegister','podName','podname')\r\n                                        } \r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"minlen\", \"podname\"]'\r\n                                        data-param='2'\r\n                                        value={this.state.formRegister.podName}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-users\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formRegister','podName','required') && <span className=\"invalid-feedback\">POD name is required</span> }\r\n                                    { this.hasError('formRegister','podName','minlen') && <span className=\"invalid-feedback\">POD name must have at least 2 characters</span> }\r\n                                    { this.hasError('formRegister','podName','podname') && <span className=\"invalid-feedback\">POD name must be alphanumeric</span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputPassword1\">Password</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\"\r\n                                        id=\"id-password\"\r\n                                        name=\"password\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Password\"\r\n                                        invalid={\r\n                                                this.hasError('formRegister','password','required') \r\n                                            ||  this.hasError('formRegister','password','password')\r\n                                        } \r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"password\"]'\r\n                                        value={this.state.formRegister.password}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-lock\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formRegister','password','required') && <span className=\"invalid-feedback\">Password is required</span> }\r\n                                    { this.hasError('formRegister','password','password') && \r\n                                        <span className=\"invalid-feedback\">\r\n                                            Password must have at least 8 characters including each of one of the following:\r\n                                            upper case, lower case, numeric and special character.\r\n                                        </span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\" htmlFor=\"signupInputRePassword1\">Confirm Password</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\" \r\n                                        name=\"confirmedPassword\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Retype assword\"\r\n                                        invalid={this.hasError('formRegister','confirmedPassword','equalto')}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"equalto\"]'\r\n                                        value={this.state.formRegister.confirmedPassword}\r\n                                        data-param=\"id-password\"\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-lock\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"invalid-feedback\">Password confirmation doesn't match password</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* <CustomInput type=\"checkbox\" id=\"terms\"\r\n                                name=\"terms\"\r\n                                label=\"I agree with the terms\"\r\n                                invalid={this.hasError('formRegister','terms','required')}\r\n                                onChange={this.validateOnChange}\r\n                                data-validate='[\"required\"]'\r\n                                checked={this.state.formRegister.terms}>\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                            </CustomInput> */}\r\n                            <button className=\"btn btn-block btn-primary mt-3\" type=\"submit\">Create account</button>\r\n                        </form>\r\n                        <p className=\"pt-3 text-center\">Have an account?</p>\r\n                        <Link to=\"login\" className=\"btn btn-block btn-secondary\">Log in</Link>\r\n                    </div>\r\n                </div>\r\n                {/* END card */}\r\n                <div className=\"p-3 text-center\">\r\n                    <span className=\"mr-2\">&copy;</span>\r\n                    <span>2021</span>\r\n                    <span className=\"mx-2\">-</span>\r\n                    <span>Angle</span>\r\n                    <br/>\r\n                    <span>Bootstrap Admin Template</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}