{"ast":null,"code":"// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n\n  var isRegExp = require('./_is-regexp');\n\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n\n  if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n\n    $split = function $split(separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return []; // If `separator` is not a regex, use native split\n\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0; // Make `global` and avoid `lastIndex` issues by working with a copy\n\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i; // Doesn't need flags gy, but they don't hurt\n\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index)); // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) {\n              if (arguments[i] === undefined) match[i] = undefined;\n            }\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    }; // Chakra, V8\n\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function $split(separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  } // 21.1.3.17 String.prototype.split(separator, limit)\n\n\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});","map":{"version":3,"sources":["/Users/a18322/Desktop/reactjs-seed/node_modules/core-js/modules/es6.regexp.split.js"],"names":["require","defined","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","exec","undefined","separator","limit","string","String","call","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","RegExp","source","separator2","match","lastIndex","lastLength","i","index","slice","replace","arguments","apply","test","split","O","fn"],"mappings":"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","sourcesContent":["// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n"]},"metadata":{},"sourceType":"script"}