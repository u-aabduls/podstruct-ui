{"version":3,"sources":["components/Forms/FormValidator.js","../node_modules/reactstrap/es/CustomFileInput.js","../node_modules/reactstrap/es/CustomInput.js","components/Pages/Login.js"],"names":["FormValidator","isValidName","input","alpha","split","i","length","toUpperCase","char","charAt","includes","isValidPODName","num","isValidPassword","alphaLower","special","upperFound","lowerFound","numFound","specialFound","validate","element","isCheckbox","type","value","checked","name","Error","param","getAttribute","validations","JSON","parse","result","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","document","getElementById","equals","isLength","min","max","toInt","list","isIn","bulkValidate","inputs","errors","hasError","Object","keys","some","val","propTypes","className","PropTypes","string","id","oneOfType","number","isRequired","label","node","valid","bool","invalid","bsSize","htmlFor","cssModule","object","onChange","func","children","array","innerRef","CustomFileInput","_React$Component","props","_this","call","this","state","files","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","target","getSelectedFiles","apply","arguments","setState","multiple","slice","map","file","join","indexOf","parts","render","_this$props","dataBrowse","hidden","attributes","_objectWithoutPropertiesLoose","customClass","mapToCssModules","classNames","validationClassNames","labelHtmlFor","React","createElement","_extends","ref","Component","inline","CustomInput","_rest","wrapperClasses","rest","Login","formLogin","email","password","validateOnChange","event","form","onSubmit","elements","filter","nodeName","console","log","preventDefault","formName","inputName","method","href","src","alt","Input","placeholder","data-validate","to"],"mappings":"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","file":"static/js/6.49430569.chunk.js","sourcesContent":["// https://github.com/chriso/validator.js\r\nimport validator from 'validator';\r\n\r\n/**\r\n * Helper methods to validate form inputs\r\n * using controlled components\r\n */\r\nconst FormValidator = {\r\n\r\n    /**\r\n     * Returns true iff:\r\n     *     1) input is alpha only\r\n     *     2) input's only special character (if exists) is apostrophe (') or hyphen (-)\r\n     */\r\n    isValidName(input) {\r\n        const alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n\r\n        var i = input.length;\r\n        input = input.toUpperCase();\r\n        while (i--) {\r\n            var char = input.charAt(i);\r\n            if (!alpha.includes(char) && (char !== '\\'' && char !== '-')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns true iff:\r\n     *     1) input is alphanumeric\r\n     *     2) input's only special character (if exists) is hyphen (-) \r\n     */\r\n    isValidPODName(input) {\r\n        const alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n        const num = \"0123456789\".split(\"\");\r\n\r\n        // name not valid if less than 2 characters long\r\n        if (input.length < 2) {\r\n            return false;\r\n        }\r\n\r\n        var i = input.length;\r\n        input = input.toUpperCase();\r\n        while (i--) {\r\n            var char = input.charAt(i);\r\n            if (!alpha.includes(char) && !num.includes(char)) {\r\n                if (char !== '-') {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns true iff:\r\n     *     1) input is at least 8 chars long\r\n     *     2) input contains 1 upper case letter \r\n     *     3) input contains 1 lower case letter\r\n     *     4) input contains 1 number \r\n     *     5) input contains 1 special character\r\n     */\r\n    isValidPassword(input) {\r\n        const alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n        const alphaLower = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\r\n        const num = \"0123456789\".split(\"\");\r\n        const special = \"`~!@#$%^&*()-_=+[{]};:,<.>/?\".split(\"\");\r\n\r\n        if (input.length < 8) {\r\n            return false;\r\n        }\r\n\r\n        var i = input.length,\r\n            upperFound = false,\r\n            lowerFound = false,\r\n            numFound = false,\r\n            specialFound = false;\r\n\r\n        while (i--) {\r\n            var char = input.charAt(i);\r\n            if (!upperFound && alpha.includes(char)) {\r\n                upperFound = true;\r\n            }\r\n            if (!lowerFound && alphaLower.includes(char)) {\r\n                lowerFound = true;\r\n            }\r\n            if (!numFound && num.includes(char)) {\r\n                numFound = true;\r\n            }\r\n            if (!specialFound && special.includes(char)) {\r\n                specialFound = true;\r\n            }\r\n        }\r\n        return upperFound && lowerFound && numFound && specialFound;\r\n    },\r\n\r\n    /**\r\n     * Validate input element\r\n     * @param element Dome element of the input\r\n     * Uses the following attributes\r\n     *     data-validate: array in json format with validation methods\r\n     *     data-param: used to provide arguments for certain methods.\r\n     */\r\n    validate(element) {\r\n\r\n        const isCheckbox = element.type === 'checkbox';\r\n        const value = isCheckbox ? element.checked : element.value;\r\n        const name = element.name;\r\n\r\n        if (!name) throw new Error('Input name must not be empty.');\r\n\r\n        // use getAttribute to support IE10+\r\n        const param = element.getAttribute('data-param');\r\n        const validations = JSON.parse(element.getAttribute('data-validate'));\r\n\r\n        let result = []\r\n        if(validations && validations.length) {\r\n            /*  Result of each validation must be true if the input is invalid\r\n                and false if valid. */\r\n            validations.forEach(m => {\r\n                switch (m) {\r\n                    case 'required':\r\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\r\n                        break;\r\n                    case 'email':\r\n                        result[m] = !validator.isEmail(value)\r\n                        break;\r\n                    case 'number':\r\n                        result[m] = !validator.isNumeric(value)\r\n                        break;\r\n                    case 'integer':\r\n                        result[m] = !validator.isInt(value)\r\n                        break;\r\n                    case 'alphanum':\r\n                        result[m] = !validator.isAlphanumeric(value)\r\n                        break;\r\n                    case 'url':\r\n                        result[m] = !validator.isURL(value)\r\n                        break;\r\n                    case 'equalto':\r\n                        // here we expect a valid ID as param\r\n                        const value2 = document.getElementById(param).value;\r\n                        result[m] = !validator.equals(value, value2)\r\n                        break;\r\n                    case 'minlen':\r\n                        result[m] = !validator.isLength(value, { min: param })\r\n                        break;\r\n                    case 'maxlen':\r\n                        result[m] = !validator.isLength(value, { max: param })\r\n                        break;\r\n                    case 'len':\r\n                        const [min, max] = JSON.parse(param)\r\n                        result[m] = !validator.isLength(value, { min, max })\r\n                        break;\r\n                    case 'min':\r\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\r\n                        break;\r\n                    case 'max':\r\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\r\n                        break;\r\n                    case 'list':\r\n                        const list = JSON.parse(param)\r\n                        result[m] = !validator.isIn(value, list)\r\n                        break;\r\n                    case 'name':\r\n                        result[m] = !this.isValidName(value)\r\n                        break;\r\n                    case 'podname':\r\n                        result[m] = !this.isValidPODName(value)\r\n                        break;\r\n                    case 'password':\r\n                        result[m] = !this.isValidPassword(value)\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unrecognized validator.');\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Bulk validation of input elements.\r\n     * Used with form elements collection.\r\n     * @param  {Array} inputs Array for DOM element\r\n     * @return {Object}       Contains array of error and a flag to\r\n     *                        indicate if there was a validation error\r\n     */\r\n    bulkValidate(inputs) {\r\n        let errors = {},\r\n            hasError = false;\r\n\r\n        inputs.forEach(input => {\r\n            let result = this.validate(input)\r\n            errors = { ...errors, [input.name]: result }\r\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\r\n        })\r\n\r\n        return {\r\n            errors,\r\n            hasError\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormValidator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nvar CustomFileInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CustomFileInput.prototype;\n\n  _proto.onChange = function onChange(e) {\n    var input = e.target;\n    var onChange = this.props.onChange;\n    var files = this.getSelectedFiles(input);\n\n    if (typeof onChange === \"function\") {\n      onChange.apply(void 0, arguments);\n    }\n\n    this.setState({\n      files: files\n    });\n  };\n\n  _proto.getSelectedFiles = function getSelectedFiles(input) {\n    var multiple = this.props.multiple;\n\n    if (multiple && input.files) {\n      var files = [].slice.call(input.files);\n      return files.map(function (file) {\n        return file.name;\n      }).join(\", \");\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      var parts = input.value.split(\"\\\\\");\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        label = _this$props.label,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        bsSize = _this$props.bsSize,\n        innerRef = _this$props.innerRef,\n        htmlFor = _this$props.htmlFor,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        dataBrowse = _this$props.dataBrowse,\n        hidden = _this$props.hidden,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\", \"hidden\"]);\n\n    var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n    var files = this.state.files;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: customClass,\n      hidden: hidden || false\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n      onChange: this.onChange\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: mapToCssModules(\"custom-file-label\", cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse\n    }, files || label || \"Choose file\"), children);\n  };\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nimport CustomFileInput from './CustomFileInput';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nfunction CustomInput(props) {\n  var className = props.className,\n      label = props.label,\n      inline = props.inline,\n      valid = props.valid,\n      invalid = props.invalid,\n      cssModule = props.cssModule,\n      children = props.children,\n      bsSize = props.bsSize,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"]);\n\n  var type = attributes.type;\n  var customClass = mapToCssModules(classNames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === \"select\") {\n    var _type = attributes.type,\n        _rest = _objectWithoutPropertiesLoose(attributes, [\"type\"]);\n\n    return /*#__PURE__*/React.createElement(\"select\", _extends({}, _rest, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass),\n      \"aria-invalid\": invalid\n    }), children);\n  }\n\n  if (type === \"file\") {\n    return /*#__PURE__*/React.createElement(CustomFileInput, props);\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return /*#__PURE__*/React.createElement(\"input\", _extends({}, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames(\"custom-control\", {\n    \"custom-control-inline\": inline\n  }), cssModule));\n\n  var hidden = attributes.hidden,\n      rest = _objectWithoutPropertiesLoose(attributes, [\"hidden\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses,\n    hidden: hidden || false\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, rest, {\n    type: type === \"switch\" ? \"checkbox\" : type,\n    ref: innerRef,\n    \"aria-invalid\": invalid,\n    className: classNames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule))\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: mapToCssModules(\"custom-control-label\", cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n}\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, CustomInput } from 'reactstrap';\r\n\r\nimport FormValidator from '../Forms/FormValidator.js';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        formLogin: {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n     /**\r\n      * Validate input using onChange event\r\n      * @param  {String} formName The name of the form in the state object\r\n      * @return {Function} a function used for the event\r\n      */\r\n    validateOnChange = event => {\r\n        const input = event.target;\r\n        const form = input.form\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        const result = FormValidator.validate(input);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value,\r\n                errors: {\r\n                    ...this.state[form.name].errors,\r\n                    [input.name]: result\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onSubmit = e => {\r\n        const form = e.target;\r\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\r\n\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    /* Simplify error check */\r\n    hasError = (formName, inputName, method) => {\r\n        return  this.state[formName] &&\r\n                this.state[formName].errors &&\r\n                this.state[formName].errors[inputName] &&\r\n                this.state[formName].errors[inputName][method]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"block-center mt-4 wd-xl\">\r\n                <div className=\"card card-flat\">\r\n                    <div className=\"card-header text-center bg-dark\">\r\n                        <a href=\"\">\r\n                            <img className=\"block-center rounded\" src=\"img/logo.png\" alt=\"Logo\"/>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"text-center py-2\">SIGN IN TO CONTINUE.</p>\r\n                        <form className=\"mb-3\" name=\"formLogin\" onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Enter email\"\r\n                                        invalid={this.hasError('formLogin','email','required')||this.hasError('formLogin','email','email')}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\", \"email\"]'\r\n                                        value={this.state.formLogin.email}/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-envelope\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    { this.hasError('formLogin','email','required') && <span className=\"invalid-feedback\">Field is required</span> }\r\n                                    { this.hasError('formLogin','email','email') && <span className=\"invalid-feedback\">Field must be valid email</span> }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"password\"\r\n                                        id=\"id-password\"\r\n                                        name=\"password\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Password\"\r\n                                        invalid={this.hasError('formLogin','password','required')}\r\n                                        onChange={this.validateOnChange}\r\n                                        data-validate='[\"required\"]'\r\n                                        value={this.state.formLogin.password}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-lock\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"clearfix\">\r\n                                <CustomInput type=\"checkbox\" id=\"rememberme\"\r\n                                    className=\"float-left mt-0\"\r\n                                    name=\"remember\"\r\n                                    label=\"Remember Me\">\r\n                                </CustomInput>\r\n                                <div className=\"float-right\">\r\n                                    <Link to=\"recover\" className=\"text-muted\">Forgot your password?</Link>\r\n                                </div>\r\n                            </div>\r\n                            <button className=\"btn btn-block btn-primary mt-3\" type=\"submit\">Login</button>\r\n                        </form>\r\n                        <p className=\"pt-3 text-center\">Need to Signup?</p>\r\n                        <Link to=\"register\" className=\"btn btn-block btn-secondary\">Register Now</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-3 text-center\">\r\n                    <span className=\"mr-2\">&copy;</span>\r\n                    <span>2020</span>\r\n                    <span className=\"mx-2\">-</span>\r\n                    <span>Angle</span>\r\n                    <br/>\r\n                    <span>Bootstrap Admin Template</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}